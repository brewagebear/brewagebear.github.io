{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/독서요약",
    "result": {"pageContext":{"currentCategory":"독서요약","categories":["All","개발","인프라","독서요약"],"edges":[{"node":{"id":"5310b836-4bc3-57fa-8fb0-a520045f1c27","excerpt":"STEP 1. 소켓이란? STEP 1.1 소켓의 종류 STEP 1.1.1 스트림 소켓 STEP 1.1.2 데이터그램 소켓 STEP 2. 커널 코드로 알아보는 TCP와 소켓 STEP 2.1 커널 코드로 알아보는 TCP Handshake 과정 STEP 2.1.1 3-Way Handshake STEP 2.1.2 4-Way HandShake STEP 2.2 커널 코드로 알아보는 TCP 메시지 송/수신 과정 STEP 2.2.1 TCP 송신 과정 STEP 2.2.2 TCP 수신 과정 STEP 3. TCP 사용 시 서비스에서 겪을 수 있는 문제들 STEP 3.1 TIME_WAIT 소켓 STEP 3.1.1 클라이언트 측면 STEP 3.1.2 서버 측면 STEP 3.1.3 TIME_WAIT 소켓의 존재 의의 STEP 3.3 TCP Keep-Alive STEP 3.3.1 TCP Keep-Alive 파라미터 STEP 3.3.2 좀비 커넥션 STEP 3.3.3 HTTP 지속커넥션 vs TCP Keep-…","fields":{"slug":"/linux-kernel-internal-3/"},"frontmatter":{"categories":"개발 인프라 독서요약","title":"[Kernel] 커널과 함께 알아보는 소켓과 TCP Deep Dive","date":"October 12, 2023"}},"next":{"fields":{"slug":"/linux-kernel-internal-2/"}},"previous":null},{"node":{"id":"4df41ab3-4636-55ae-99e1-06ce85d287e2","excerpt":"STEP 1. 서론 STEP 1.1 가상 주소 공간 STEP 1.2 task_struct와 mm_struct에 대한 이해 STEP 1.3 가상 메모리 영역(Virtual Memory Area, VMA) STEP 1.4 프로세스가 가상 주소 공간에 매핑되는 방식 STEP 1.4 페이지와 페이지 캐시 STEP 1.4.1 페이지 STEP 1.4.2 페이지 캐시 STEP 1.4.3 페이지 교체 정책 STEP 2. 본론 STEP 2.1 free 명령어 분석 STEP 2.1.1 buff와 cache 영역 STEP 2.1.2 avaliable 지표 STEP 2.2 /proc/meminfo 명령어 분석 STEP 2.3 slab 메모리 영역 STEP 2.3.1 vmalloc()과 kmalloc() STEP 2.3.2 Slab STEP 3. 결론 STEP 4. 추신 개요 이전 포스팅 [Kernel] 리눅스 스케줄링 매커니즘과 Load Average 이전 내용에서는 커널을 이해하기 위한 배경지식과 더…","fields":{"slug":"/linux-kernel-internal-2/"},"frontmatter":{"categories":"개발 인프라 독서요약","title":"[Kernel] 리눅스 메모리 관리 훑어보기","date":"September 04, 2023"}},"next":{"fields":{"slug":"/linux-kernel-internal-1/"}},"previous":{"fields":{"slug":"/linux-kernel-internal-3/"}}},{"node":{"id":"addafc2f-d783-5e3c-9397-e7d16b087547","excerpt":"STEP 1. 서론 STEP 1.1 병렬성과 동시성 STEP 1.2 Run Queue와 Wait Queue STEP 1.2.1 Run Queue STEP 1.2.2 Wait Queue STEP 1.3 리눅스 내에서 기본적인 스케줄링 STEP 1.3.1 프로세스 상태 변화 STEP 1.4 가상 주소 공간 STEP 1.5 MMIO(Memory Mapped I/O) STEP 2. 본론 STEP 2.1 VIRT & RES & SHR STEP 2.2 Memory Commit STEP 2.3 프로세스의 상태 2.4 프로세스의 우선순위 STEP 3. Load Averrage와 시스템 부하 STEP 3.1 CPU Bound vs I/O Bound 개요 최근에 커널 책을 같이 읽고 정리하는 스터디를 시작하였다. 이를 다루기 앞서, 난이도가 조금 있다보니 배경지식이 조금 필요한 것으로 보인다.\n이에 따라, 중요한 개념 몇가지만 짚고 이와 연관된 내용으로 같이 얘기를 해보고자 한다. STEP 1. 서…","fields":{"slug":"/linux-kernel-internal-1/"},"frontmatter":{"categories":"개발 인프라 독서요약","title":"[Kernel] 리눅스 스케줄링 매커니즘과 Load Average","date":"August 23, 2023"}},"next":{"fields":{"slug":"/overview-reactive-system/"}},"previous":{"fields":{"slug":"/linux-kernel-internal-2/"}}},{"node":{"id":"71473346-b939-5b1f-9fc7-2698078a9f3f","excerpt":"STEP 1.1 실세계 예시를 통한 객체지향 들여다보기 STEP 1.1.1 요청과 응답으로 구성된 협력 STEP 1.1.2 역할과 책임 STEP 1.2 중간 정리 STEP 2.1 상태와 행동을 함께 지닌 자율적인 객체 STEP 2.2 협력과 메시지 STEP 2.3 메서드와 자율성 객체지향의 사실과 오해 1장 리뷰 STEP 1. 객체지향은 실세계의 모방이다? STEP 1.1 실세계 예시를 통한 객체지향 들여다보기 STEP 1.1.1 요청과 응답으로 구성된 협력 STEP 1.1.2 역할과 책임 STEP 1.2 중간 정리 STEP 2. 협력 속에 사는 객체 STEP 2.1 상태와 행동을 함께 지닌 자율적인 객체 STEP 2.2 협력과 메시지 STEP 2.3 메서드와 자율성 STEP 3. 객체지향의 본질 STEP 4. 객체를 지향하라 개요 이 책을 보고 나서 많은 것들을 깨닫고, 많은 생각을 하게 되었다. 정말 객체지향이란 무엇인지? 에 대해서 가슴에 와닿게 설명해준 책이라 생각한다. 특…","fields":{"slug":"/review-essence-of-object-orientation/"},"frontmatter":{"categories":"개발 독서요약","title":"Book Review - 객체지향의 사실과 오해 1장 리뷰","date":"November 15, 2020"}},"next":{"fields":{"slug":"/review-startup-homework/"}},"previous":{"fields":{"slug":"/fundamental-jvm-classloader/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}