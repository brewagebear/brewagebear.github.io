{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/soap-and-wsdl/",
    "result": {"data":{"cur":{"id":"6a4a185e-59a6-54d6-b8e7-2e214c10d7b4","html":"<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#gdsglobal-distribution-systems\">GDS(Global Distribution Systems)</a></p>\n</li>\n<li>\n<p><a href=\"#soap%EC%99%80-wsdl\">SOAP와 WSDL</a></p>\n<ul>\n<li><a href=\"#soapsimple-object-access-protocol%EB%9E%80\">SOAP(Simple Object Access Protocol)란?</a></li>\n<li><a href=\"#wsdlweb-services-description-language-%EB%9E%80\">WSDL(Web Services Description Language) 란?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#spring-boot-soap-%EC%98%88%EC%8B%9C\">Spring Boot SOAP 예시</a></p>\n<ul>\n<li><a href=\"#xml-%EC%8A%A4%ED%82%A4%EB%A7%88-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1\">XML 스키마 파일 작성</a></li>\n<li><a href=\"#xml-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%9E%90%EB%B0%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\">XML 파일을 자바 클래스 파일로 만들기</a></li>\n<li><a href=\"#endpoint-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B0%8F-config-%ED%81%B4%EB%9E%98%EC%8A%A4\">Endpoint 클래스 및 Config 클래스</a></li>\n<li><a href=\"#%EC%8B%A4%EC%A0%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\">실제 테스트</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h1 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h1>\n<p>현재, 간단하게 여행 도메인 관련한 토이 프로젝트를 진행하고 있는 상황이다.\n먼저 항공쪽 서비스를 먼저 만들고 있었는데 궁금했던 점은 스카이 스캐너와 같은 서비스에서 어떻게 수 많은 항공사의 정보를 가져오는지 궁금했고, 이 도메인에 대해서 알게된 점과 요청, 응답 스펙에 대해서 알아보고자 한다.</p>\n<h2 id=\"gdsglobal-distribution-systems\" style=\"position:relative;\"><a href=\"#gdsglobal-distribution-systems\" aria-label=\"gdsglobal distribution systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GDS(Global Distribution Systems)</h2>\n<p>수 많은 온라인 여행사(OTA)들이 전 세계의 항공 정보를 가져오고 있다.\n위에 개요에 말한 것 처럼 나는 이게 어떻게 가져오는 지 궁금해졌고, 리서치를 하기 시작했다.</p>\n<p>리서치를 하다보니 생소한 용어인 GDS(Global Distribution Systems)라는 를 알게되었는데 GDS는 대형항공사의 자체 예약 시스템인 CRS(Central Reservation System)이 진화한 형태로 CRS는 항공사마다 요청 스펙이 다를 수 있다보니 다중 항공사와의 시스템 호환이나 예약에는 한계가 있어서 GDS가 만들어지게 되었다고 한다.</p>\n<p>아마도, 많은 여행사들이 이 GDS를 통해서 항공 정보를 가져오는 것으로 보인다.</p>\n<p>GDS는 전세계에서 크게 3개의 기업으로 나눠지는데 다음과 같다.</p>\n<ol>\n<li><a href=\"https://developers.amadeus.com/\">토파스(아마데우스)</a></li>\n<li><a href=\"https://www.asianasabre.co.kr/\">애바카스(아시나아세이버)</a></li>\n<li><a href=\"http://galileo.co.kr/\">갈릴레오, 월드스팬(트래블포트)</a></li>\n</ol>\n<p>이중에서 토파스는 대한항공이 사용하고, 애바카스는 아시나아에서 사용한다.\n리서치를 하다보니 GDS와 항공사와 합작회사를 만들어서 사용하는게 대다수인 거 같다.</p>\n<p>아무튼 국내 항공 여행 서비스를 제공해주는 회사들을 위와 같은 솔루션을 활용한다고 생각하면 될 것 같다.</p>\n<p>당연히 GDS 마다 차이가 있고, 광고 도메인의 DSP(Demand-Side Platform) 마냥 이 GDS를 가공해서 B2C를 하는 업체에게 제공해주는 곳도 있을 것이다.</p>\n<p>찾아보니 <a href=\"https://www.bdtask.com/flight-booking-software.php\">Bdtask</a> 이런 곳이 그러한 역할을 해줄 것 같다. 아무튼 GDS마다 제공해주는 API 방식도 가지각색인데 그 중에서 <strong>SOAP(Simple Object Access Protocol)</strong> 은 공통적으로 제공한다.</p>\n<p>본 포스팅은 <strong>SOAP</strong> 로 데이터를 통신하는 예제를 다뤄보고자한다.</p>\n<p>그 전에 먼저 알아둬야할 선행 지식들이 몇가지 존재한다.</p>\n<h2 id=\"soap와-wsdl\" style=\"position:relative;\"><a href=\"#soap%EC%99%80-wsdl\" aria-label=\"soap와 wsdl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SOAP와 WSDL</h2>\n<h3 id=\"soapsimple-object-access-protocol란\" style=\"position:relative;\"><a href=\"#soapsimple-object-access-protocol%EB%9E%80\" aria-label=\"soapsimple object access protocol란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SOAP(Simple Object Access Protocol)란?</h3>\n<p>SOAP는 HTTP, HTTPS, SMTP 등을 통해서 <strong>XML 기반</strong> 의 메시지를 컴퓨터 네트워크 상에서 교환하는 프로토콜이다. 뜻과 같이 간단하게 객체로 접근가능한 프로토콜이라는 의미이다.</p>\n<p>JSON과 같이 XML도 플랫폼과 프로그래밍 언어에 종속적이지 않기 때문에 <strong>이기종간의 통신이 가능</strong>하다는 장점이 존재한다.</p>\n<p>SOAP의 메시지 형태는 다음과 같다.</p>\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22961251/154504754-413e3c8b-f689-4d6b-a730-63b6f255655a.png\">\n</p>\n<p align=\"center\">\n    <em><a href=\"https://narup.tistory.com/80\">시간이 멈추는 장소, Simple Object Access Protocol이란?, 2020</a></em>\n</p>\n<p>그리고, SOAP는 WSDL(Web Service Description Language)를 통해서 이 서비스가 현재 어떤 내용들을 제공해주는지 알려준다.</p>\n<p>REST의 예로 들면 <code class=\"language-text\">api/v1/github/docs</code> 라는 api가 해당 api에 대한 명세에 대한 목록들을 담고 있다 가정하면, SOAP에서는 WSDL이 그러한 역할을 해준다고 볼 수 있다.</p>\n<h3 id=\"wsdlweb-services-description-language-란\" style=\"position:relative;\"><a href=\"#wsdlweb-services-description-language-%EB%9E%80\" aria-label=\"wsdlweb services description language 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WSDL(Web Services Description Language) 란?</h3>\n<p>예시로 현재 만들고 있는 토이 프로젝트에서 제공하는 WSDL을 샘플로 확인해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>definitions</span>\n\t<span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>wsdl</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.xmlsoap.org/wsdl/<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>sch0</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/messages<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>sch1</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/types<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>soap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.xmlsoap.org/wsdl/soap/<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>tns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/definitions<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetNamespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/definitions<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>types</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>schema</span>\n\t\t\t<span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>tns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/messages<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>types</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/types<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">attributeFormDefault</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>unqualified<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">elementFormDefault</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>qualified<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetNamespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/messages<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>import</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/types<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsRequest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>complexType</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>all</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>from<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>types:Airport<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>to<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>types:Airport<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>departureDate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>all</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>complexType</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>element</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsResponse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>complexType</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sequence</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">maxOccurs</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>unbounded<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">minOccurs</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flightSchedule<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>types:FlightSchedule<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sequence</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>complexType</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>element</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>schema</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>schema</span>\n\t\t\t<span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>tns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/types<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">attributeFormDefault</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>unqualified<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">elementFormDefault</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>qualified<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetNamespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://dailyworker.github.io/tiny-travel/flight/schemas/types<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>complexType</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FlightSchedule<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sequence</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AirPlane<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:Airplane<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>departDate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dateTime<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>from<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:Airport<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>arriveDate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dateTime<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>to<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:Airport<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sequence</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>complexType</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>complexType</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Airplane<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sequence</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flightModelName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flightNumber<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>available<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>int<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sequence</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>complexType</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>complexType</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Airport<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>all</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>city<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>airport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>all</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>complexType</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>schema</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>types</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>message</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsRequest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>part</span> <span class=\"token attr-name\">element</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sch0:GetFlightsRequest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsRequest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>part</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>message</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>message</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsResponse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>part</span> <span class=\"token attr-name\">element</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sch0:GetFlightsResponse<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsResponse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>part</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>message</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>portType</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FlightPort<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>operation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlights<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>input</span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:GetFlightsRequest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsRequest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>input</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>output</span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:GetFlightsResponse<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsResponse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>output</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>operation</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>portType</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>binding</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FlightPortSoap11<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:FlightPort<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>binding</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>document<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">transport</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.xmlsoap.org/soap/http<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>operation</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlights<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>operation</span> <span class=\"token attr-name\">soapAction</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsRequest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>body</span> <span class=\"token attr-name\">use</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>literal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>input</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>output</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GetFlightsResponse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>body</span> <span class=\"token attr-name\">use</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>literal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>output</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>operation</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>binding</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>service</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FlightPortService<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">wsdl:</span>port</span> <span class=\"token attr-name\">binding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:FlightPortSoap11<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FlightPortSoap11<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>address</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://localhost:8081/flight-service<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>port</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>service</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">wsdl:</span>definitions</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>역시 <code class=\"language-text\">XML</code> 기반이다보니 복잡해보인다.\n하지만 하나씩 까보면 그렇게 어렵지(??)는 않은데 중요하게 볼 부분은 다음과 같다.</p>\n<ol>\n<li><code class=\"language-text\">&lt;wsdl:types> ... &lt;/wsdl:types></code> : <strong>교환될 메시지의 설명 및 해당 메시지에 사용될 타입을 정의</strong>한다. 여기서 타입은 스키마의 정의에 따르는데 우리는 <code class=\"language-text\">xmlns:tns=\"http://dailyworker.github.io/tiny-travel/flight/schemas/types\" </code> 여기에 명시된 타입들로 처리된다고 생각하면 된다.  실제로, <code class=\"language-text\">&lt;element name=\"from\" type=\"tns:Airport\"/></code> 와 같이 <code class=\"language-text\">tns</code> 가 붙은 것들은 해당 스키마에서 정해둔 타입을 활용한다.</li>\n<li><code class=\"language-text\">&lt;wsdl:message> ... &lt;/wsdl:message></code> : <strong>어떠한 메시지가 교환되는지에 대한 내용이 담겨져있다.</strong> <code class=\"language-text\">&lt;wsdl:message name=\"GetFlightsRequest\"></code>  이 부분을 위의 코드에서 검색해보자. 이는 DTO마냥 <code class=\"language-text\">GetFlightsRequest</code> 형식이 들어올 경우에 아래의 블록이 수행된다는 내용이다.</li>\n<li><code class=\"language-text\">&lt;wsdl:part> ... &lt;/wsdl:part></code> : 위의 내용의 아래 블록을 보면 명시된 내용인데 이는 내부에서 타입을 선언하자면 <code class=\"language-text\">XML</code> 크기가 너무 커지니 <code class=\"language-text\">GetFlightsRequest</code> 의 <strong>타입에 대한 바인딩 정보가 담겨져 있다고 생각</strong>하면된다. (원래라면 내부에 또 타입을 정의할 수도 있는데 이렇게 함으로써 XML의 중복을 제거한다고 생각하면 된다.)</li>\n<li><code class=\"language-text\">&lt;wsdl:portType> ... &lt;wsdl:portType></code> : RESTful API의 예시로 들면 <strong>어떠한 요청이 들어왔을 때, 응답이 어떠한 값으로 나오는지에 대한 정의</strong>가 명세되어있다고 생각하면 될 것 같다.</li>\n<li><code class=\"language-text\">&lt;wsdl:binding> ... &lt;wsdl:binding></code>  : 특정 <code class=\"language-text\">portType</code> 에 대한 <strong>메시지 포맷이나 프로토콜, operation 에 대한 정의</strong>부분이라고 생각하면 된다.</li>\n</ol>\n<p>대략적인 내용은 이러하다.</p>\n<p>좀 더 자세한 내용을 알고 싶다면 <a href=\"https://www.w3.org/TR/wsdl.html\">Web Service Definition Language (WSDL) 1.1</a> 이 문서를 추천한다. 상세 스펙문서이다.</p>\n<p>뭐 이 내용들은 밑에 실습을 진행하면서 다시한번 이야기해보도록 하겠다.\n자세한 이해보다는 대략적으로 아 대충 이런거구나라고 느끼는게 더 중요할 것 같다.</p>\n<p>정리하자면 SOAP는 XML 기반의 메시지 통신, 교환 프로토콜이고, 이 SOAP를 사용하기 위해서 어떤 메시지를 어떤 타입으로 주고받아야하는가에 대한 명세서가 WSDL이라고 이해하면 될 것 같다.</p>\n<p>잠깐 RESTful API와 비교를 해보자.</p>\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22961251/154505519-9f960d12-db3b-48c7-b325-fa33b43d9d7e.jpeg\">\n</p>\n<p align=\"center\">\n    <em><a href=\"https://stackoverflow.com/a/8983122\">Nakkeeran, Simple explanation about SOAP and REST (stackoverflow)</a></em>\n</p>\n<p>이 짤방이 너무나 잘 요약해주고 있는 것 같다. SOAP는 위의 규약과 WSDL등의 규칙이 존재하기때문에 데이터 요청을 주고받을 때도 <strong>SOAP Standards</strong> 를 지켜서 보내야한다.</p>\n<p>여기서 말하는 <strong>SOAP Standard</strong> 는 <strong>SOAP Envelope, SOAP Head, SOAP Body</strong>와 같은 것들을 말한다.</p>\n<ul>\n<li>SOAP 데이터 요청 예시</li>\n</ul>\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22961251/154505598-c71a92c2-fcce-4577-8d86-2e3713e1f5c3.png\">\n</p>\n<p>이 예시를 보면 <strong>SOAP Envelope, SOAP Head, SOAP Body</strong>가 포함되어있고, <strong>Body</strong> 내부에 실제 요청을 보낼 데이터가 담겨져있는 것을 확인 할 수 있다.</p>\n<p>SOAP 방식의 추가적인 단점은 단순 요청도 데이터 타입과 규약들이 필요하다보니 <strong>POST</strong>로 보내야한다.</p>\n<p>원래 RESTful이라면 <code class=\"language-text\">GET : api/v1/schedule/AMS-VCE-2006-01-13</code> 이런식으로도 단순화를 시킬 수 있었을 것이다.</p>\n<p>혹은 위와 같이 <code class=\"language-text\">POST</code> 요청이라면 RESTful하진 않지만 HTTP API로 가정해서 설계해본다면 아래와 같이도 가능할 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST : api/v1/schedule \nBODY : {\n\t\"from\" : \"AMS\",\n\t\"to\"   : \"VCE\",\n\t\"departureDate\" : \"2006-01-31\"\n}</code></pre></div>\n<p>당연히 SOAP를 사용하는 것보다 편하다.</p>\n<p>하지만, 이를 사용하는 이유는 <code class=\"language-text\">RESTful API</code> 이전에 수 많은 <strong>Enterprise Service</strong>들은 SOAP 기반으로 통신을 하였고,  이 잔재가 아직 남아있는 것이라고도 볼 수 있을 것이다.</p>\n<p>그때 당시에 분명 언어나 플랫폼의 종속성 없이 XML을 정해진 규약대로 보내면 해당 요청과 응답을 받는다는 것은 각 서비스마다의 <strong>Integration</strong> 또한, 편했을 것이다라고 생각한다.</p>\n<p>RESTful과 SOAP 비교 관련해서는  <a href=\"http://web.archive.org/web/20120421084456/http://www.prescod.net/rest/rest_vs_soap_overview/\">Roots of the REST/SOAP Debate</a> 이 문서를 참고하고, 현재까지 SOAP를 쓰는 이유에 대해서는 <a href=\"https://qr.ae/pGj0ur\">Why are most of the flight booking providers still using WSDL and SOAP? Why would anyone use them? - Quora</a> 이 답변이 도움이 되보인다.</p>\n<p>결론은 아직까지도 쓰니까 우리는 쓰는 방법을 알아야한다고 요약할 수 있을 것 같다.\n다음은 스프링에서 이를 다루는 방법을 얘기해보고자 한다.</p>\n<h2 id=\"spring-boot-soap-예시\" style=\"position:relative;\"><a href=\"#spring-boot-soap-%EC%98%88%EC%8B%9C\" aria-label=\"spring boot soap 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring Boot SOAP 예시</h2>\n<p>여기서는 이미 만들어진 코드를 갖고 단순하게 얘기해보고자 한다.\n해당 코드는 <a href=\"https://spring.io/guides/gs/producing-web-service/\">Producing a SOAP web Service</a>와 동일하다.\n전체 코드는 <a href=\"https://github.com/dailyworker/blog-example/tree/study/ws/spring-producing-ws-example\">spring-producing-ws-example</a> 을 참고하자.</p>\n<h3 id=\"xml-스키마-파일-작성\" style=\"position:relative;\"><a href=\"#xml-%EC%8A%A4%ED%82%A4%EB%A7%88-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1\" aria-label=\"xml 스키마 파일 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XML 스키마 파일 작성</h3>\n<p>예시 프로젝트에서 사용할 XML 스키마 파일은 <code class=\"language-text\">countries.xsd</code> 이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>schema</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xs</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>tns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://spring.io/guides/gs-producing-web-service<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">targetNamespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://spring.io/guides/gs-producing-web-service<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">elementFormDefault</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>qualified<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getCountryRequest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>complexType</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>sequence</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xs:string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>sequence</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>complexType</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>element</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getCountryResponse<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>complexType</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>sequence</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>country<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:country<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>sequence</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>complexType</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>element</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>complexType</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>country<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>sequence</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xs:string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>population<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xs:int<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>capital<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xs:string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>element</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currency<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tns:currency<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>sequence</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>complexType</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>simpleType</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currency<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>restriction</span> <span class=\"token attr-name\">base</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>xs:string<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>enumeration</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>GBP<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>enumeration</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>EUR<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xs:</span>enumeration</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>PLN<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>restriction</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>simpleType</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xs:</span>schema</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>구조를 보면 대충 눈치를 채겠지만, <code class=\"language-text\">getCountryRequest</code> 를 받아서 <code class=\"language-text\">getContryResponse</code> 로 던져주는 SOAP WebService를 만들 것이다.</p>\n<p>예시 프로젝트에서 사용될 타입은 <code class=\"language-text\">currency</code> 와 <code class=\"language-text\">country</code> 타입이다.</p>\n<p>자 이제 이 XML 스키마 파일을 자바 클래스 파일로 역직렬화하여야 한다.</p>\n<h3 id=\"xml-파일을-자바-클래스-파일로-만들기\" style=\"position:relative;\"><a href=\"#xml-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%9E%90%EB%B0%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"xml 파일을 자바 클래스 파일로 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XML 파일을 자바 클래스 파일로 만들기</h3>\n<p>이제 XML을 자바 클래스 파일로 만들어야하는데 일일히 만들어주는 것은 번거로우니 <code class=\"language-text\">JAXB</code> 를 이용하여 해당 <code class=\"language-text\">.xsd</code> 파일에 대해서 자동으로 자바 클래스 파일로 만들어줘야하는 작업이 필요하다.</p>\n<p>이를 위해서 <code class=\"language-text\">build.gradle</code> 파일에 태스크와 의존성을 추가한다.</p>\n<ul>\n<li>build.gradle</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\"><span class=\"token punctuation\">...</span>\nconfigurations <span class=\"token punctuation\">{</span>\n    jaxb\n<span class=\"token punctuation\">}</span>\n\nsourceSets <span class=\"token punctuation\">{</span>\n    main <span class=\"token punctuation\">{</span>\n        java <span class=\"token punctuation\">{</span>\n            srcDir <span class=\"token string\">'src/main/java'</span>\n            srcDir <span class=\"token string\">'build/generated-sources/jaxb'</span> <span class=\"token comment\">// xsd 파일을 통해서 역직렬화되어 생성되는 자바 클래스파일의 위치</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// xsd 파일을 토대로 자바 클래스 파일을 생성한다</span>\ntask genJaxb <span class=\"token punctuation\">{</span>\n    ext<span class=\"token punctuation\">.</span>sourcesDir <span class=\"token operator\">=</span> <span class=\"token string gstring\">\"<span class=\"token expression\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>buildDir<span class=\"token punctuation\">}</span></span>/generated-sources/jaxb\"</span>\n    ext<span class=\"token punctuation\">.</span>schema <span class=\"token operator\">=</span> <span class=\"token string gstring\">\"src/main/resources/countries.xsd\"</span>\n\n    outputs<span class=\"token punctuation\">.</span>dir sourcesDir\n\n    <span class=\"token function\">doLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 커스텀 Ant 태스크를 만든다.</span>\n        project<span class=\"token punctuation\">.</span>ant <span class=\"token punctuation\">{</span>\n            taskdef name<span class=\"token punctuation\">:</span> <span class=\"token string gstring\">\"xjc\"</span><span class=\"token punctuation\">,</span> classname<span class=\"token punctuation\">:</span> <span class=\"token string gstring\">\"com.sun.tools.xjc.XJCTask\"</span><span class=\"token punctuation\">,</span>\n                    classpath<span class=\"token punctuation\">:</span> configurations<span class=\"token punctuation\">.</span>jaxb<span class=\"token punctuation\">.</span>asPath\n            <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">:</span> sourcesDir<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// 위에서 입력한 스키마 폴더와 소스디렉토리에 .xsd 파일을 토대로 XML을 자바 객체로 역직렬화(Unmarshalling) 한다.</span>\n            <span class=\"token function\">xjc</span><span class=\"token punctuation\">(</span>destdir<span class=\"token punctuation\">:</span> sourcesDir<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">:</span> schema<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">arg</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">:</span> <span class=\"token string gstring\">\"-wsdl\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token function\">produces</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">:</span> sourcesDir<span class=\"token punctuation\">,</span> includes<span class=\"token punctuation\">:</span> <span class=\"token string gstring\">\"**/*.java\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">...</span>\n\ndependencies <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">...</span>\n       implementation <span class=\"token string\">'org.glassfish.jaxb:jaxb-runtime:2.3.2'</span> <span class=\"token comment\">// JDK 11 호환 문제때문에 의존성 추가</span>\n    implementation <span class=\"token string\">'wsdl4j:wsdl4j'</span>\n    <span class=\"token function\">jaxb</span><span class=\"token punctuation\">(</span><span class=\"token string gstring\">\"org.glassfish.jaxb:jaxb-xjc\"</span><span class=\"token punctuation\">)</span>\n\n    testImplementation <span class=\"token string\">'org.springframework.boot:spring-boot-starter-test'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이후에 <code class=\"language-text\">gradle genJaxb</code> 명령어를 수행하면 아래와 같이 클래스 파일이 만들어짐을 확인할 수 있다.</p>\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22961251/154505901-e5fdc7dc-d1e5-421b-ae3d-d39614e34638.png\">\n</p>\n<p><code class=\"language-text\">QueryDSL</code> 의 <code class=\"language-text\">Q</code> 파일처럼 실제 사용하기 위해서는 이런 언마샬링 과정이 필요하다고 생각하면 될 것 같다.</p>\n<p>주의 할 점은 <code class=\"language-text\">QueryDSL</code> 은 도메인 파일에 <code class=\"language-text\">Q</code> 를 붙여줘서 혼동할 일이 적지만, <code class=\"language-text\">JAXB</code> 로 생성되는 스키마 객체는 도메인 클래스 파일과 이름이 동일할 수 있으므로, 헷갈릴 수가 있다.</p>\n<p>실제 프로젝트를 보면 <code class=\"language-text\">Country</code> 나 <code class=\"language-text\">Currency</code> 클래스 파일이 존재하지않는데 위에서 언마샬링해서 생성된 파일을 사용하기 때문이다.</p>\n<p>그렇다면, 실제 도메인 객체와 언마샬링 객체와 컨버팅할 수 있는 방법은 없을까?\n이는 나중에 보도록하자.</p>\n<p>대충 언마샬링까지 되는 것 같으니 이제 <code class=\"language-text\">Endpoint</code> 파일과 <code class=\"language-text\">Config</code> 파일을 만든다.</p>\n<h3 id=\"endpoint-클래스-및-config-클래스\" style=\"position:relative;\"><a href=\"#endpoint-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B0%8F-config-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"endpoint 클래스 및 config 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Endpoint 클래스 및 Config 클래스</h3>\n<p>언마샬링 객체를 initialize하는 <code class=\"language-text\">Repository</code> 클래스는 <a href=\"https://github.com/dailyworker/blog-example/blob/study/ws/spring-producing-ws-example/src/main/java/io/github/dailyworker/springproducingwsexample/CountryRepository.java\">ContryRepository</a>\n파일을 참고하자.</p>\n<ul>\n<li>WebServiceConfig</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@EnableWs</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebServiceConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WsConfigurerAdapter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ServletRegistrationBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageDispatcherServlet</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">messageDispatcherServlet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">MessageDispatcherServlet</span> servlet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageDispatcherServlet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        servlet<span class=\"token punctuation\">.</span><span class=\"token function\">setApplicationContext</span><span class=\"token punctuation\">(</span>applicationContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        servlet<span class=\"token punctuation\">.</span><span class=\"token function\">setTransformWsdlLocations</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServletRegistrationBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>servlet<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/ws/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"countries\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// http://localhost8080/ws/countries.wsdl</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DefaultWsdl11Definition</span> <span class=\"token function\">defaultWsdl11Definition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XsdSchema</span> countriesSchema<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">DefaultWsdl11Definition</span> wsdl11Definition <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultWsdl11Definition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        wsdl11Definition<span class=\"token punctuation\">.</span><span class=\"token function\">setPortTypeName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CountriesPort\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        wsdl11Definition<span class=\"token punctuation\">.</span><span class=\"token function\">setLocationUri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/ws\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// wsdl url 설정</span>\n        wsdl11Definition<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://spring.io/guides/gs-producing-web-service\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 타겟 네임스페이스 설정</span>\n        wsdl11Definition<span class=\"token punctuation\">.</span><span class=\"token function\">setSchema</span><span class=\"token punctuation\">(</span>countriesSchema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 스키마 설정</span>\n        <span class=\"token keyword\">return</span> wsdl11Definition<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">XsdSchema</span> <span class=\"token function\">countriesSchema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleXsdSchema</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"countries.xsd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 사용할 스키마 파일 위치 등록</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드에서 중요한 부분만 살펴보자.</p>\n<ul>\n<li><code class=\"language-text\">countriesSchema()</code></li>\n</ul>\n<p>먼저 <code class=\"language-text\">countriesSchema()</code> 는 <code class=\"language-text\">resource/countries.xsd</code> 파일을 통해서 이 파일을 스키마로 사용하겠다고 선언하는 부분이다.</p>\n<ul>\n<li><code class=\"language-text\">defaultWsdl11Definition(XsdSchema countiresSchema)</code></li>\n</ul>\n<p><code class=\"language-text\">defaultWsdl11Definition(XsdSchema countiresSchema)</code> 은 입력된 스키마를 토대로 <code class=\"language-text\">&lt;wsdl:definition> ... &lt;/wsdl:definition></code> 을 만들어주는 녀석이다.  내부 로직을 보면 알겠지만, uri나 portType등을 설정한다.</p>\n<p>참고로 <code class=\"language-text\">@Bean(name = \"countries)\"</code> 를 통해서 <code class=\"language-text\">.wsdl</code> 호출 url이 설정 가능하다. 물론 메서드명으로도 가능하다. <code class=\"language-text\">defaultWsdl11Definition()</code> 메서드를 <code class=\"language-text\">countries()</code> 로 바꾸고 위의 어노테이션을 지워도 <code class=\"language-text\">http://localhost:8080/ws/countries.wsdl</code> 로 접근하여 서비스 목록을 확인할 수 있다.</p>\n<p>다음은 SOAP의 컨트롤러의 역할을 한다고 볼 수 있는 Endpoint 이다.</p>\n<ul>\n<li>CountryEndpoint</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Endpoint</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CountryEndpoint</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> NAMESPACE_URI <span class=\"token operator\">=</span> <span class=\"token string\">\"http://spring.io/guides/gs-producing-web-service\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CountryRepository</span> countryRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CountryEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CountryRepository</span> countryRepository<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>countryRepository <span class=\"token operator\">=</span> countryRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PayloadRoot</span><span class=\"token punctuation\">(</span>namespace <span class=\"token operator\">=</span> NAMESPACE_URI<span class=\"token punctuation\">,</span> localPart <span class=\"token operator\">=</span> <span class=\"token string\">\"getCountryRequest\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ResponsePayload</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">GetCountryResponse</span> <span class=\"token function\">getCountry</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestPayload</span> <span class=\"token class-name\">GetCountryRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">GetCountryResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GetCountryResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        response<span class=\"token punctuation\">.</span><span class=\"token function\">setCountry</span><span class=\"token punctuation\">(</span>countryRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findCountry</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서는 <code class=\"language-text\">getCountry()</code> 메서드 부분만 보고자한다.</p>\n<ul>\n<li><code class=\"language-text\">@PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getCountryRequest\")</code></li>\n</ul>\n<p>먼저 <code class=\"language-text\">@PayloadRoot</code> 는 @MVC의 <code class=\"language-text\">@RequestMapping</code> 과 비슷한 역할을 한다. 다른 부분은 <code class=\"language-text\">@PayloadRoot</code> 의 <code class=\"language-text\">namespace</code> 와 <code class=\"language-text\">localPart</code> 가 일치해야 하위 메서드로 매핑되어 타진다는 것 뿐이다.</p>\n<p>각각의 파라미터들은 아래와 같은 역할을 한다.</p>\n<p>먼저 <code class=\"language-text\">namespace</code> 는 <code class=\"language-text\">countries.xsd</code> 내부에 작성된 <code class=\"language-text\">targetNamespace</code> 를 입력해준다. 이 네임스페이스를 토대로 타입이나 기타 값들을 처리하기 때문이다.</p>\n<p>확인해보면 <code class=\"language-text\"> private static final String NAMESPACE_URI = \"http://spring.io/guides/gs-producing-web-service\";</code> 이 값이 <code class=\"language-text\">countries.xsd</code> 파일의 <code class=\"language-text\">targetNamespace</code> 와 일치함을 알 수 있다.</p>\n<p>그 뒤에 <code class=\"language-text\">localPart</code> 는 요청으로 들어온 데이터 객체의 타입을 확인한다.\n여기서는 <code class=\"language-text\">getCountryRequest</code> 일 때 하위 메서드가 실행될 것이다.</p>\n<ul>\n<li><code class=\"language-text\">@ResponsePayload</code></li>\n</ul>\n<p>이 어노테이션은 @MVC의 <code class=\"language-text\">@ResponseBody</code> 와 비슷한 역할을 한다 보면된다.</p>\n<p>뭐 이 두개만 알고있다면 내부 로직은 대충 요청으로 들어온 값을 찾아서 있으면 <code class=\"language-text\">GetCountryResponse</code> 로 감싸서 던진다는 내용이라 보면 될 것이다.</p>\n<h3 id=\"실제-테스트\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%A0%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"실제 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실제 테스트</h3>\n<p>E2E 테스트를 위해서 build.gradle에 다음 의존성을 추가한다.</p>\n<p><code class=\"language-text\">testImplementation 'org.springframework.ws:spring-ws-test'</code></p>\n<p>전체 코드는 <a href=\"https://github.com/dailyworker/blog-example/blob/study/ws/spring-producing-ws-example/src/test/java/io/github/dailyworker/springproducingwsexample/CountryEndpointTest.java\">CountryEndpointTest.java</a>을 참고하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getCountry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Source</span> getCountryRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;gs:getCountryRequest xmlns:gs='\"</span> <span class=\"token operator\">+</span> NAMESPACE_URI <span class=\"token operator\">+</span> <span class=\"token string\">\"'>\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;gs:name>Spain&lt;/gs:name>\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/gs:getCountryRequest>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Source</span> getCountryResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;ns2:getCountryResponse xmlns:ns2='\"</span> <span class=\"token operator\">+</span> NAMESPACE_URI <span class=\"token operator\">+</span> <span class=\"token string\">\"'>\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;ns2:country>\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;ns2:name>Spain&lt;/ns2:name>\"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"&lt;ns2:population>46704314&lt;/ns2:population>\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;ns2:capital>Madrid&lt;/ns2:capital>\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;ns2:currency>EUR&lt;/ns2:currency>\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/ns2:country>\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/ns2:getCountryResponse>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    mockClient\n            <span class=\"token punctuation\">.</span><span class=\"token function\">sendRequest</span><span class=\"token punctuation\">(</span><span class=\"token function\">withPayload</span><span class=\"token punctuation\">(</span>getCountryRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span><span class=\"token function\">noFault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span><span class=\"token function\">payload</span><span class=\"token punctuation\">(</span>getCountryResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">andExpect</span><span class=\"token punctuation\">(</span><span class=\"token function\">validPayload</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>해당 네임스페이스를 E2E 테스트로 목클라이언트에게 넘겨서 요청과 응답을 테스트하는 테스트이다. 테스트가 성공적으로 돌아감을 확인하였으니 이제 실제로 요청을 보내보자.</p>\n<ul>\n<li>WSDL 목록 요청 (<a href=\"http://localhost:8080/ws/countries.wsdl\">http://localhost:8080/ws/countries.wsdl</a>)</li>\n</ul>\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22961251/154506072-3cafd507-df04-4d89-9d42-8f32c733cfd4.png\">\n</p>\n<ul>\n<li>실제 요청 테스트 및 응답 값 확인 (<a href=\"http://localhost:8080/ws\">http://localhost:8080/ws</a>)</li>\n</ul>\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22961251/154506059-29233a65-384d-41e1-8303-858a86fdce05.png\">\n</p>\n<p>주의할 점은 <code class=\"language-text\">POST</code> 로 요청을 보내야한다는 점이다.\n이렇게 함으로써 SOAP WebService의 맛을 한번 보게되었다.</p>\n<h1 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h1>\n<p>항공 조회 토이프로젝트를 만들면서 <code class=\"language-text\">GDS</code> 라는 개념을 알게 되었고, <code class=\"language-text\">GDS</code> 가 제공해주는 <code class=\"language-text\">SOAP</code> 라는 것을 알게되서 <code class=\"language-text\">WSDL</code> 과 이걸 스프링으로 간단하게 만들어보는 예시 작업을 하였다.</p>\n<p>아까전에 잠깐 설명했지만, <code class=\"language-text\">QueryDSL</code> 과 달리 위 코드는 도메인 코드와 XSD 스키마 코드가 동일한 이름을 갖으므로 혼동될 수 있다.</p>\n<p>또한 XSD 스키마와 도메인 클래스간의 변환은 어떻게 할 것인가에 대한 문제가 존재한다.</p>\n<p>잠깐 토이 프로젝트의 샘플 코드를 보자.</p>\n<ul>\n<li>SchemaConversionUtils</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">FlightSchedule</span> <span class=\"token function\">toSchemaType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>dailyworker<span class=\"token punctuation\">.</span>flight<span class=\"token punctuation\">.</span>domain<span class=\"token punctuation\">.</span></span>FlightSchedule</span> domainFlightSchedule<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">throws</span> <span class=\"token class-name\">DatatypeConfigurationException</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">FlightSchedule</span> schemaFlight <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FlightSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    schemaFlight<span class=\"token punctuation\">.</span><span class=\"token function\">setAirPlane</span><span class=\"token punctuation\">(</span><span class=\"token function\">toSchemaType</span><span class=\"token punctuation\">(</span>domainFlightSchedule<span class=\"token punctuation\">.</span><span class=\"token function\">getAirplane</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    schemaFlight<span class=\"token punctuation\">.</span><span class=\"token function\">setFrom</span><span class=\"token punctuation\">(</span><span class=\"token function\">toSchemaType</span><span class=\"token punctuation\">(</span>domainFlightSchedule<span class=\"token punctuation\">.</span><span class=\"token function\">getFrom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    schemaFlight<span class=\"token punctuation\">.</span><span class=\"token function\">setDepartDate</span><span class=\"token punctuation\">(</span><span class=\"token function\">toXMLGregorianCalendar</span><span class=\"token punctuation\">(</span>domainFlightSchedule<span class=\"token punctuation\">.</span><span class=\"token function\">getDepartDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    schemaFlight<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span><span class=\"token function\">toSchemaType</span><span class=\"token punctuation\">(</span>domainFlightSchedule<span class=\"token punctuation\">.</span><span class=\"token function\">getTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    schemaFlight<span class=\"token punctuation\">.</span><span class=\"token function\">setArriveDate</span><span class=\"token punctuation\">(</span><span class=\"token function\">toXMLGregorianCalendar</span><span class=\"token punctuation\">(</span>domainFlightSchedule<span class=\"token punctuation\">.</span><span class=\"token function\">getArriveDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> schemaFlight<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드는 인자로 도메인 클래스를 받아서 XSD 스키마 객체로 바꿔주는 작업을 한다.\n이런 식으로 구별하기 위해서 풀 패키지명을 작성하는 것도 좋아보인다.</p>\n<p>하지만, 위와 같이 작성하면 코드가 지저분해지는 단점이 있다.\n내 생각은 분명 JAXB를 제너레이트할 때 다른 클래스명으로 만드는 방법도 있을 것 같은데 아직 못찾았으니 일단 임시방편으로 활용하고 있다.</p>\n<p>더 나아가 분명 도메인, XSD 스키마 클래스간의 매핑도 일일히 위와 같이 하지 않고 오브젝트매퍼와 같은 도구가 있을 것 같은데 찾으면 공유해보도록 하겠다.</p>\n<p>참고로 웹서비스 예제는 아주 잘나와있는 예제가 있다.</p>\n<p>JPA와 활용해서 언마샬링 객체와 컨버팅 및 핸들링하는 부분의 상당한 부분을 이 프로젝트에서 아이디어를 착안하고 이를 적절하게 바꾸면서 사용하고 있는데 <a href=\"https://github.com/spring-projects/spring-ws-samples\">spring-ws-sample</a> 이 프로젝트를 추천한다.</p>\n<h1 id=\"레퍼런스\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%8D%BC%EB%9F%B0%EC%8A%A4\" aria-label=\"레퍼런스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레퍼런스</h1>\n<ol>\n<li><a href=\"http://www.gtn.co.kr/mobile/news_view.asp?news_seq=62639\">GDS 3파전 본격화…새로운 전쟁의 시작</a></li>\n<li><a href=\"https://medium.com/@stevenson14789632/gds-integration-f8717f1e3f65\">GDS Integration</a></li>\n<li><a href=\"https://narup.tistory.com/80\">SOAP Simple Object Access Protocol이란?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/209905/representational-state-transfer-rest-and-simple-object-access-protocol-soap\">Representational state transfer (REST) and Simple Object Access Protocol (SOAP)</a></li>\n<li><a href=\"http://web.archive.org/web/20120421084456/http://www.prescod.net/rest/rest_vs_soap_overview/\">Roots of the REST/SOAP Debate</a></li>\n<li><a href=\"https://qr.ae/pGj0ur\">Why are most of the flight booking providers still using WSDL and SOAP? Why would anyone use them? - Quora</a></li>\n<li><a href=\"https://www.w3.org/TR/2000/NOTE-SOAP-20000508/\">Simple Object Access Protocol (SOAP) 1.1</a></li>\n</ol>","excerpt":"GDS(Global Distribution Systems) SOAP와 WSDL SOAP(Simple Object Access Protocol)란? WSDL(Web Services Description Language) 란? Spring Boot SOAP 예시 XML 스키마 파일 작성 XML 파일을 자바 클래스 파일로 만들기 Endpoint 클래스 및 Config 클래스 실제 테스트 개요 현재, 간단하게 여행 도메인 관련한 토이 프로젝트를 진행하고 있는 상황이다.\n먼저 항공쪽 서비스를 먼저 만들고 있었는데 궁금했던 점은 스카이 스캐너와 같은 서비스에서 어떻게 수 많은 항공사의 정보를 가져오는지 궁금했고, 이 도메인에 대해서 알게된 점과 요청, 응답 스펙에 대해서 알아보고자 한다. GDS(Global Distribution Systems) 수 많은 온라인 여행사(OTA)들이 전 세계의 항공 정보를 가져오고 있다.\n위에 개요에 말한 것 처럼 나는 이게 어떻게 가져오는 지 궁금해졌고, 리…","frontmatter":{"date":"February 17, 2022","title":"Spring 공식 예제로 알아보는 SOAP와 WSDL","categories":"개발","author":"개발한입","emoji":"💻"},"fields":{"slug":"/soap-and-wsdl/"}},"next":{"id":"287f6419-a82a-51e9-8464-09d3be200c24","html":"<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#step-1-redis-write-back%EC%9D%84-%EB%8F%84%EC%9E%85%ED%95%98%EB%8A%94-%EC%97%AC%EC%A0%95%EA%B8%B0\">STEP 1. Redis Write Back을 도입하는 여정기</a></p>\n</li>\n<li>\n<p><a href=\"#step-1-redis-collection-%EC%84%A4%EA%B3%84-%EB%B0%8F-%EA%B5%AC%ED%98%84\">STEP 1. Redis Collection 설계 및 구현</a></p>\n<ul>\n<li><a href=\"#step-21-%EC%B6%94%EA%B0%80-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\">STEP 2.1 추가 요구사항</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#step-3-%EB%AC%B8%EC%A0%9C%EC%A0%90\">STEP 3. 문제점</a></p>\n</li>\n</ul>\n</div>\n<h1 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h1>\n<ul>\n<li>개요</li>\n<li>STEP 1. Redis Write Back을 도입하는 여정기</li>\n<li>STEP 2. Redis Collection 설계 및 구현\n<ul>\n<li>STEP 2.1 추가 요구사항</li>\n</ul>\n</li>\n<li>STEP 3. 문제점</li>\n<li>STEP 4. REFERENCE</li>\n</ul>\n<h1 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h1>\n<p>현재 재직 중인 회사에서 추천 시스템을 도입하기 위해서 기존의 로깅 방식에 대해서 고도화가 필요했었다.</p>\n<p>일단, 아주 단순하게 기존 사용자에게 추천됐던 아이템과 읽은 아이템을 토대로 추천 시스템을 만들고자하였다.</p>\n<p>이 업무를 진행하기에 앞서 진행되어야하는 부분이 바로 어떤 아이템들이 추천되었고, 어떤 아이템을 읽었는지에 대한 로그를 수집하는 일이었다.</p>\n<p>기존에는 사용자가 클릭을 수행하면 바로 DB에 저장이 되는 형식이였으나 사용자가 증가함에 따라 DB 부하 문제도 있고, 개선책을 찾게 되었다.</p>\n<h2 id=\"step-1-redis-write-back을-도입하는-여정기\" style=\"position:relative;\"><a href=\"#step-1-redis-write-back%EC%9D%84-%EB%8F%84%EC%9E%85%ED%95%98%EB%8A%94-%EC%97%AC%EC%A0%95%EA%B8%B0\" aria-label=\"step 1 redis write back을 도입하는 여정기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>STEP 1. Redis Write Back을 도입하는 여정기</h2>\n<p>그에 대한 개선책으로는 이러한 흐름으로 생각하게 되었다.</p>\n<ul>\n<li>사용자가 클릭하면 이 데이터를 바로 DB로 넣는 부분은 DB 부하의 문제가 존재한다.</li>\n</ul>\n<blockquote>\n<p>그렇다면 어딘가에 클릭했던 내역을 모아두고 일정 시간이 되면 DB에 벌크 삽입(Bulk Insert)하는 방식은 어떨까?</p>\n</blockquote>\n<ul>\n<li>그렇다면 이 내역을 일정 기간 동안 모아둘 곳이 필요한데 어디다 모아둘 것인가?</li>\n</ul>\n<blockquote>\n<p>Redis를 사용하자</p>\n</blockquote>\n<p>위의 내용을 취합하면 우리가 내린 결론은 Redis를 <strong>Write Back</strong> 방식으로 사용하는 것이었다.</p>\n<p>해당 내용은 <a href=\"https://youtu.be/mPB2CZiAkKM?t=530\">우아한테크세미나 - 우아한 Redis</a> 을 참고해보자.</p>\n<p>그 후에 배치 잡을 통하여 Redis Cache에 저장된 값을 DB에 Bulk Insert하는 방식으로 방향을 잡게 되었다.</p>\n<h2 id=\"step-1-redis-collection-설계-및-구현\" style=\"position:relative;\"><a href=\"#step-1-redis-collection-%EC%84%A4%EA%B3%84-%EB%B0%8F-%EA%B5%AC%ED%98%84\" aria-label=\"step 1 redis collection 설계 및 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>STEP 1. Redis Collection 설계 및 구현</h2>\n<p>기존 Redis에는 사용자에게 추천될 아이템의 캐시만 있었던 상황인데 이제 추가적으로 Data들이 필요해졌다.</p>\n<ol>\n<li>해당 사용자에게 추천된 아이템들 Collection</li>\n<li>해당 사용자가 읽은 아이템 Collection</li>\n<li>해당 사용자가 언제, 읽었고 그 아이템이 추천된 아이템인지를 확인하는 Collection</li>\n</ol>\n<p>Redis Collection을 처음 다루다보니 아주 단순하게 <code class=\"language-text\">nested json</code> 형태로 작업을 하고자하였다. 그러나, 초반부터 난관에 봉착했다.</p>\n<p>그 이유는 아주 단순하다. Redis는 <code class=\"language-text\">nested hash</code> 를 지원안한다.</p>\n<p>예를 들어보자 아래와 같은 데이터 셋을 나는 가지고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Prod_Color  |   Prod_Count  |   Prod_Price   |   Prod_Info\n------------------------------------------------------------\n  Red        |       12      |       300      |   In Stock\n  Blue       |        8      |       310      |   In Stock</code></pre></div>\n<p>그래서 이걸 토대로 아래와 같은 명령어를 통해서 <code class=\"language-text\">Hashes</code> 로 저장하고자 하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">HMSET Records Prod_Color <span class=\"token string\">\"Red\"</span> Prod_Count <span class=\"token number\">12</span> Prod_Price <span class=\"token number\">300</span> Prod_Info <span class=\"token string\">\"In Stock\"</span>\nHMSET Records Prod_Color <span class=\"token string\">\"Blue\"</span> Prod_Count <span class=\"token number\">8</span> Prod_Price <span class=\"token number\">310</span> Prod_Info <span class=\"token string\">\"In Stock\"</span></code></pre></div>\n<p>대충 이 명령어를 수행하면 나올 데이터 셋은 아래와 같을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  Records : [\n\t\t{\n\t\t\tProd_Color : \"Red\",\n\t\t\tProd_Count : 12,\n\t\t\tProd_Price : 300,\n\t\t\tProd_Info : \"In Stock\"\n\t\t},\n\t\t{\n\t\t\tProd_Color : \"Blue\",\n\t\t\tProd_Count : 8,\n\t\t\tProd_Price : 310,\n\t\t\tProd_Info : \"In Stock\",\n\t\t}\n\t]\n}</code></pre></div>\n<p>그러나, 이런 결과는 Redis에서 허용되지 않는다.</p>\n<p>실제로 위의 명령어를 날린 후 <code class=\"language-text\">HGTALL Records</code> 명령어를 날려보면 이해가 될 것이다.</p>\n<p>그렇다면 위와 같은 데이터 구조를 Redis에서는 못 만드는 것일까?</p>\n<p>방법은 존재한다.</p>\n<p>바로 <strong>접미사(Suffix)</strong> 를 활용하는 방식이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/*\n Records:Prod_Color 형태로 Hash를 생성한다. \n 여기서는 Records:red / Records:blue 형태로 생성\n*/\nHMSET Records:red Prod_Color <span class=\"token string\">\"Red\"</span> Prod_Count <span class=\"token number\">12</span> Prod_Price <span class=\"token number\">300</span> Prod_Info <span class=\"token string\">\"In Stock\"</span>\nHMSET Records:blue Prod_Color <span class=\"token string\">\"Blue\"</span> Prod_Count <span class=\"token number\">8</span> Prod_Price <span class=\"token number\">310</span> Prod_Info <span class=\"token string\">\"In Stock\"</span>\n\n/* 생성된 Hash를 Set의 멤버로 삽입한다 Set의 키는 Records:Ids */\nSADD Records:Ids red\nSADD Records:Ids blue\n\n/* \n 이를 통하여 Records:Ids로 조회하면 어떤 값들이 들어가있는지 확인 할 수 있다. \n 이렇게 Set을 만듦으로써 전체 Product에 대한 내용은 Set에서 참조 가능하다.\n*/\nSMEMBERS Records:Ids\n\n/* Hash는 단순히 Records:Ids에서 갖고 있는 Item들을 통해 상세한 값을 조회한다. */\nHGETALL Records:ID_OF_MEMBER\n\n/* 아래의 커맨드로 조회가 가능 */\nHGETALL Records:red\nHGETALL Records:blue</code></pre></div>\n<p>자세한 내용은 <a href=\"https://stackoverflow.com/questions/6864968/writing-a-query-to-add-multiple-values-to-a-key-in-redis-hashes\">writing a query to add multiple values to a key in redis hashes</a> 을 참고하면된다.</p>\n<p>여기서 아이디어를 착안하여 아래와 같이 Collection 설계를 진행하였다.</p>\n<p>기존 추천 아이템 설계 Collection은 <code class=\"language-text\">recommend:UserIdKey</code> 를 통하여 각 개인에게 추천된 데이터 리스트들을 담아두었는데 이를 좀 더 확장하였다.</p>\n<ol>\n<li><code class=\"language-text\">recommend:UserIdKey</code></li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/22961251/111896160-6b0ba580-8a0f-11eb-8f86-4d56fbfbfb04.png\" alt=\"redis-collection-ex-1\"></p>\n<p>기존에 사용자 추천 아이템들의 목록을 들고 있는 List</p>\n<ol start=\"2\">\n<li><code class=\"language-text\">userIdKey:readItemId</code></li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/22961251/111896161-6c3cd280-8a0f-11eb-8893-207c5fb4bd0b.png\" alt=\"redis-collection-ex-2\"></p>\n<p>각 사용자가 어떤 아이템을 읽었는지에 대한 SET 각 아이템에 대해서 언제 읽었고, 추천되었는지 여부는 위의 아이디어를 차용하여 <code class=\"language-text\">HashMap</code>으로 처리하였다.</p>\n<ol start=\"3\">\n<li><code class=\"language-text\">userIdKey:readItemId</code></li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/22961251/111896162-6c3cd280-8a0f-11eb-8b7a-c72fb594ac20.png\" alt=\"redis-collection-ex-3\"></p>\n<p>즉, abcd라는 사용자가 읽은 데이터의 경우에는 <code class=\"language-text\">abcd:readItemId</code> SET 콜렉션에 저장이 되고, 위의 유저가 itemId가 1인 아이템이 읽었을 경우에는 <code class=\"language-text\">abcd:1</code> HASH에 저장되게끔 설계를 진행하였다.</p>\n<p>이로써, <code class=\"language-text\">userId:readItemId</code> 콜렉션은 각각의 유저들이 어떠한 아이템을 읽었는가에 대한 전체 아이템 id를 갖고 있는 Set이 되며, <code class=\"language-text\">userId:readItemId</code> 구조의 Hash는 언제 읽었고, 이 아이템이 추천된 아이템인지를 <code class=\"language-text\">recommend:userId</code> 구조의 List에서 조회를 통하여 파악하여 생성하는 식으로 설계하였다.</p>\n<p>즉, 이런 식으로 Redis에서 들고 있다가 Batch를 통해서 일정 사이즈 만큼 chunk를 하여 Bulk Insert하는 방식으로 생각하게 되었다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/22961251/111896163-6cd56900-8a0f-11eb-8d44-d25f572b21ea.png\" alt=\"bulk-insert-code\"></p>\n<p>이후 Batch 처리를 하면서 TTL expire를 설정하여 배치를 돌고나면 캐시를 지우는 식으로 진행하였다.</p>\n<p>이렇게 끝날 줄 알았으나 문제점이 발생하였다.</p>\n<h3 id=\"step-21-추가-요구사항\" style=\"position:relative;\"><a href=\"#step-21-%EC%B6%94%EA%B0%80-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\" aria-label=\"step 21 추가 요구사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>STEP 2.1 추가 요구사항</h3>\n<ul>\n<li>UserRecommendItem 스키마 예시</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/22961251/111896164-6d6dff80-8a0f-11eb-83a8-598968baec49.png\" alt=\"db-schema-ex-1\"></p>\n<ul>\n<li>UserReadRecommendItem 스키마 예시</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/22961251/111896165-6e069600-8a0f-11eb-932d-ee4b50b19def.png\" alt=\"db-schema-ex-2\"></p>\n<p>문제는 <code class=\"language-text\">UserRecommendItem</code> 스키마에 존재했다. 여기에 <code class=\"language-text\">isRead</code> 속성이 추가되면서 <code class=\"language-text\">UserReadRecommendItem</code> 이 삽입된 후에 얘가 실제로 읽었으면 <code class=\"language-text\">true</code> 로 업데이트해야되는 상황이 된 것이다.</p>\n<p>기존에는 사용자가 읽은 부분에서 이 데이터가 읽었는지 안읽었는지 판별을 수행하였는데</p>\n<p>사용자에게 추천된 아이템에도 이 아이템이 읽었는지 안읽었는지에 대한 판별이 필요하다는 요구사항이 추가된 것이다.</p>\n<p>이렇게 되면 아주 큰 문제가 생기는데 바로 <strong>성능문제</strong>이다.</p>\n<p>사실 성능을 생각 안하고 쿼리를 던지면 간단하게 해결할 수 있는 문제일 것이다.</p>\n<p><code class=\"language-text\">UserReadRecommendItem</code> 에 삽입이 끝나면 다시 <code class=\"language-text\">UserRecommendItem</code> 의 값에서 존재하는 부분을 찾아서 <code class=\"language-text\">isRead</code> 를 업데이트하면 된다.</p>\n<p>그러나, 이 부분은 당연히 <strong>성능 상 문제</strong>가 존재한다.</p>\n<blockquote>\n<p>Select UserReadRecommendItem → Select UserRecommendItem → Update UserRecommendItem isRead = true</p>\n</blockquote>\n<p>이런식으로 <strong>2번의 조회 쿼리와 1번의 update 쿼리</strong>가 날라가는데 이는 대량의 데이터에서는 성능을 기대하기 어려울 수밖에 없다고 생각하였다.</p>\n<p>곰곰히 생각해보니 우리는 이미 Redis를 쓰고 있지 않은가?</p>\n<p>아 차라리 <code class=\"language-text\">Bulk Insert</code> 하기 전에 <code class=\"language-text\">Full-Scan</code> 한 데이터 캐시를 들고 있다가 Redis 상에서 처리를 해서 DB에 쑤시는 방법을 생각하게 되었다.</p>\n<p>아주 간단하게 <code class=\"language-text\">userId:readItemId</code> 와 <code class=\"language-text\">userId:recommendItemId</code> 를 추가하였다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/22961251/111896166-6e069600-8a0f-11eb-820f-fb859932b246.png\" alt=\"redis-collection-ex-4\"></p>\n<ol>\n<li><code class=\"language-text\">userId:readItemId</code> 콜렉션은 <code class=\"language-text\">userIdKey:readItemId</code> 구조의 Set을 전체를 담아두고 있는다.</li>\n<li><code class=\"language-text\">userId:recommendItemId</code> 콜렉션은 <code class=\"language-text\">recommend:userIdKey</code> 구조의 List 전체를 담아두고 있는다.</li>\n</ol>\n<p>우리는 이렇게 함으로써 사용자에게 추천된 아이템에 대한 정보 전체와 사용자가 읽은 아이템에 대한 정보 전체를 Redis에 캐싱을 할 수 있게 된다.</p>\n<p>기존에 업데이트하려고 했을 때 문제는 추천된 아이템에도 읽음 여부가 표시되어야하고 읽은 아이템에도 추천된 아이템인지 여부가 표시되어야한다.</p>\n<p>즉 추천되기도했고 사용자가 읽기도했던 아이템은 아래와 같은 교집합일 것이다.</p>\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22961251/111896367-f33e7a80-8a10-11eb-8e65-700716f0cb6c.png\">\n</p>\n<p>하지만 이 부분을 직접 꺼내와서 <strong>서비스 레이어에서 비교를 하자니 속도가 처참</strong>했다.</p>\n<p>그래서 Redis Command 부분을 찾는 중에 <code class=\"language-text\">SINTER</code> 라는 커맨드를 알게되었다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/22961251/111896168-6e9f2c80-8a0f-11eb-930a-0d0b1a838c61.png\" alt=\"redis-command-sinter\"></p>\n<p>우리가 원하는 교집합을 구하는 커맨드였다. 시간복잡도는 O(N*M)으로 빠르다고는 할 수 없겠지만 서비스레이어에서 직접 가져와서 비교하는 것보다 훨씬 빨랐다.</p>\n<p>아직까지 레디스의 메모리가 터지던가 그런 문제는 발생하지 않았으므로 해당 연산을 사용하기로 하였다.</p>\n<p>이렇게 함으로써 DB에 교집합에 속해있는 데이터만 추천된 아이템에 <code class=\"language-text\">isRead</code> 를 <code class=\"language-text\">true</code> 로 바꿔주면되니 전체를 탐색해서 업데이트해야되는 것이 아니라 보다 빠르게 업데이트가 가능해졌다.</p>\n<h2 id=\"step-3-문제점\" style=\"position:relative;\"><a href=\"#step-3-%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"step 3 문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>STEP 3. 문제점</h2>\n<p>위의 로깅 시스템을 도입 후 잘 사용하고 있다고 생각하였다.</p>\n<p>그러나, 바로 문제점이 생겼다. 우리 예상과 다르게 로그의 양이 너무 빠르게 증가되는 문제였다.</p>\n<p>희한하게 Redis는 아주 단순하게 <code class=\"language-text\">standalone</code> 띄워놓고 사용하고 있었는데 죽지도 않고 잘 버텨주었고 샤딩이나 레플리케이션 관련하여 점진적으로 개선하자는 부분은 다들 알고 있던 부분이었으나 정작 문제가 생긴건 DB서버였다.</p>\n<p>빠르게 증가하는 로그 덕분에 DB 서버의 <code class=\"language-text\">Disk Full</code> 이 발생할 수 있는 사태까지 진행이되었다. 내부적으로 많은 이야기가 오갔고 결국 선택을 한 것이 <strong>Kakfa를 도입한 후 로그성 데이터들을 S3로 저장</strong>을 하자고 얘기가 나왔다.</p>\n<p>다음 편은 Kafka를 로컬에서 어떤식으로 삽질을 진행했고, 운영 서버의 Docker Swarm 레이어에 설계했던 Kafka를 탑재하는데까지의 삽질기에 대해서 작성해보고자 한다.</p>\n<p>Redis를 도입하면서 참고했던 자료는 Reference에 달아두었다.\n특히, <code class=\"language-text\">SMEMBERS</code>나 <code class=\"language-text\">LRANGE</code>, <code class=\"language-text\">HGETALL</code> 커맨드들은 <code class=\"language-text\">Keys</code> 커맨드만큼 사용하는데 주의해야하는 커맨드인데 밑에 레퍼런스들 중에서 Best Pratice 관련된 레퍼런스를 보던가 혹은 왜 쓰면 안되는지에 대해서는 Worst Practice를 참고해보자.</p>\n<h1 id=\"step-4-reference\" style=\"position:relative;\"><a href=\"#step-4-reference\" aria-label=\"step 4 reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>STEP 4. REFERENCE</h1>\n<ol>\n<li><a href=\"https://tech.kakao.com/2016/03/11/redis-scan/\">Redis의 SCAN은 어떻게 동작하는가? - Kakao Tech</a></li>\n<li><a href=\"https://charsyam.wordpress.com/2014/02/04/redis-scansscanzscanhscan-%EC%9D%B4%EC%95%BC%EA%B8%B0/\">Redis Scan/SScan/ZScan/HScan 이야기 - Charsyam’s Blog</a></li>\n<li><a href=\"https://jinhunpark.com/posts/2019/04/redis-best-practice/\">Redis best practice - Jin’s rambling</a></li>\n<li><a href=\"https://redislabs.com/blog/7-redis-worst-practices/\">7 redis Worst Practices - redislabs</a></li>\n<li><a href=\"https://www.objectrocket.com/blog/how-to/10-quick-tips-about-redis/\">10 quick tips about redis</a></li>\n</ol>","frontmatter":{"date":"December 29, 2020","title":"To The Moon - 더 나은 로깅시스템을 위한 여정 (Redis 편)","categories":"개발 인프라","author":"개발한입","emoji":"💻"},"fields":{"slug":"/better-logging-with-redis/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://brewagebear.github.io","comments":{"utterances":{"repo":"brewagebear/blog-comments"}}}}},"pageContext":{"slug":"/soap-and-wsdl/","nextSlug":"/better-logging-with-redis/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}